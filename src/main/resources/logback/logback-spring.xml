<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>

    <property name="APP_Name" value="grant-baby"/>
    <property name="LOG_PATH" value="/Users/jacksparrow414/logs"/>
    <contextName>${APP_Name}</contextName>

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%d{yy-MM-dd HH:mm:ss:sss z}] %-5p [%logger{36}.%M] [%thread] : %m%n</pattern>
        </encoder>
    </appender>

    <!--打印Debug、Info级别的日志-->
    <appender name="rollingFileInfo" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${APP_Name}.info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${APP_Name}/${APP_Name}.info.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[%d{yy-MM-dd HH:mm:ss:sss z}] %-5p [%logger{36}.%M] [%thread] : %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!--返回DENY，日志将立即被抛弃不再经过其他过滤器；返回NEUTRAL，有序列表里的下个过滤器过接着处理日志；返回ACCEPT，日志会被立即处理，不再经过剩余过滤器-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>NEUTRAL</onMismatch>
        </filter>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--打印Warn、Error级别的日志-->
    <appender name="rollingFileWarn" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${APP_Name}.warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${APP_Name}/${APP_Name}.warn.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>[%d{yy-MM-dd HH:mm:ss:sss z}] %-5p [%logger{36}.%M] [%thread] : %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!--返回DENY，日志将立即被抛弃不再经过其他过滤器；返回NEUTRAL，有序列表里的下个过滤器过接着处理日志；返回ACCEPT，日志会被立即处理，不再经过剩余过滤器-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">       
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>         
            <onMismatch>NEUTRAL</onMismatch>    
        </filter>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">       
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>          
            <onMismatch>DENY</onMismatch>   
        </filter>
    </appender>
    <!--邮件配置-->
    <!--<springProperty scope="context" name="smtpHost" source="email.smtpHost"/>-->
    <!--&lt;!&ndash; SMTP server的端口地址。 &ndash;&gt;-->
    <!--<springProperty scope="context" name="smtpPort" source="email.smtpPort"/>-->
    <!--&lt;!&ndash; 发送邮件账号 &ndash;&gt;-->
    <!--<springProperty scope="context" name="username" source="email.username"/>-->
    <!--&lt;!&ndash; 发送邮件密码（此密码客户端授权密码，不是邮箱登录密码） &ndash;&gt;-->
    <!--<springProperty scope="context" name="password" source="email.password"/>-->
    <!--&lt;!&ndash; 如果设置为true，appender将会使用SSL连接到日志服务器。默认值：false &ndash;&gt;-->
    <!--<springProperty scope="context" name="SSL" source="email.SSL"/>-->
    <!--&lt;!&ndash; 指定收件人邮箱，可设置多个邮箱，收件人账号需以逗号隔开 &ndash;&gt;-->
    <!--<springProperty scope="context" name="email_to" source="email.email_to"/>-->
    <!--&lt;!&ndash; 指定发件人名称。 &ndash;&gt;-->
    <!--<springProperty scope="context" name="email_from" source="email.email_from"/>-->
    <!--&lt;!&ndash; 标题  &ndash;&gt;-->
    <!--<property name="email_subject" value="【System Error】: %msg" />-->

    <!-- 邮件发送的appender -->
    <!--<appender name="Email" class="ch.qos.logback.classic.net.SMTPAppender">-->
        <!--<smtpHost>${smtpHost}</smtpHost>-->
        <!--<smtpPort>${smtpPort}</smtpPort>-->
        <!--<username>${username}</username>-->
        <!--<password>${password}</password>-->
        <!--<asynchronousSending>false</asynchronousSending>-->
        <!--<SSL>${SSL}</SSL>-->
        <!--<to>${email_to}</to>-->
        <!--<from>${email_from}</from>-->
        <!--<subject>${email_subject}</subject>-->
        <!--&lt;!&ndash; html格式 &ndash;&gt;-->
        <!--<layout class="ch.qos.logback.classic.html.HTMLLayout">-->
            <!--<Pattern>%date - %level [%thread] %logger{50} %line %message</Pattern>-->
        <!--</layout>-->
        <!--&lt;!&ndash; 等级过滤器，指定ERROR级别发送 &ndash;&gt;-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <!--<level>ERROR</level>-->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!--<onMismatch>DENY</onMismatch>-->
        <!--</filter>-->
        <!--&lt;!&ndash; 每个电子邮件只发送一个日志条目 &ndash;&gt;-->
        <!--<cyclicBufferTracker class="ch.qos.logback.core.spi.CyclicBufferTracker">-->
            <!--<bufferSize>1</bufferSize>-->
        <!--</cyclicBufferTracker>-->
    <!--</appender>-->

    <logger name="com.graint.baby.code" level="DEBUG"/>
    <!--不同环境分别设置对应的日志输出节点 -->

    <!--开发-->
    <springProfile name="dev">
        <root level="info">
            <appender-ref ref="console" />
            <appender-ref ref="rollingFileInfo" />
            <appender-ref ref="rollingFileWarn" />
        </root>
    </springProfile>

    <!--测试-->
    <springProfile name="test">
        <root level="warn">
            <appender-ref ref="console" />
            <appender-ref ref="rollingFileInfo" />
            <appender-ref ref="rollingFileWarn" />
            <appender-ref ref="Email" />
        </root>
    </springProfile>

    <!--生产环境-->
    <springProfile name="prod">
        <root level="info">
            <appender-ref ref="console" />
            <appender-ref ref="rollingFileInfo" />
            <appender-ref ref="rollingFileWarn" />
            <appender-ref ref="Email" />
        </root>
    </springProfile>

</configuration>